using Microsoft.AspNetCore.Mvc;
using TrivyOperator.Dashboard.Application.Models;
using TrivyOperator.Dashboard.Application.Services.Abstractions;
using TrivyOperator.Dashboard.Utils;

namespace TrivyOperator.Dashboard.Application.Controllers;

[ApiController]
[Route("api/vulnerability-reports")]
public class VulnerabilityReportsController(IVulnerabilityReportService vulnerabilityReportService) : ControllerBase
{
    [HttpGet(Name = "GetVulnerabilityReportDtos")]
    [ProducesResponseType<IEnumerable<VulnerabilityReportDto>>(StatusCodes.Status200OK)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status400BadRequest)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status500InternalServerError)]
    public async Task<IEnumerable<VulnerabilityReportDto>> Get([FromQuery] string? namespaceName) =>
        namespaceName is null
            ? await vulnerabilityReportService.GetVulnerabilityReportDtos()
            : (IEnumerable<VulnerabilityReportDto>)await vulnerabilityReportService.GetVulnerabilityReportDtos(
                namespaceName);

    [HttpGet("{uid}", Name = "GetVulnerabilityReportDtoByUid")]
    [ProducesResponseType<IEnumerable<VulnerabilityReportDto>>(StatusCodes.Status200OK)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status400BadRequest)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status500InternalServerError)]
    public async Task<IActionResult> GetByUid(Guid uid)
    {
        VulnerabilityReportDto? vulnerabilityReportDto =
            await vulnerabilityReportService.GetVulnerabilityReportDtoByUid(uid);

        return vulnerabilityReportDto is null ? NotFound() : Ok(vulnerabilityReportDto);
    }

    [HttpGet("denormalized", Name = "GetVulnerabilityReportDenormalizedDtos")]
    [ProducesResponseType<IEnumerable<VulnerabilityReportDenormalizedDto>>(StatusCodes.Status200OK)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status400BadRequest)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status500InternalServerError)]
    public async Task<IEnumerable<VulnerabilityReportDenormalizedDto>> GetDenormalized() =>
        await vulnerabilityReportService.GetVulnerabilityReportDenormalizedDtos();

    [HttpGet("active-namespaces", Name = "GetVulnerabilityReportActiveNamespaces")]
    [ProducesResponseType<IEnumerable<string>>(StatusCodes.Status200OK)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status400BadRequest)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status500InternalServerError)]
    public async Task<IEnumerable<string>> GetActiveNamespaces() =>
        await vulnerabilityReportService.GetActiveNamespaces();

    [HttpGet("summary", Name = "GetVulnerabilityReportSumaryDto")]
    [ProducesResponseType<VulnerabilityReportSumaryDto>(StatusCodes.Status200OK)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status400BadRequest)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status500InternalServerError)]
    public async Task<VulnerabilityReportSumaryDto> GetVulnerabilityReportSummaryDtos() =>
        await vulnerabilityReportService.GetVulnerabilityReportSummaryDtos();

    [HttpGet("grouped-by-image", Name = "GetVulnerabilityReportImageDtos")]
    [ProducesResponseType<IEnumerable<VulnerabilityReportImageDto>>(StatusCodes.Status200OK)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status400BadRequest)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status500InternalServerError)]
    public async Task<IActionResult> GetGroupedByImage(
        [FromQuery] string? namespaceName,
        [FromQuery] string? excludedSeverities)
    {
        List<int>? excludedSeverityIds = VarUtils.GetExcludedSeverityIdsFromStringList(excludedSeverities);

        if (excludedSeverityIds == null)
        {
            return BadRequest();
        }

        IEnumerable<VulnerabilityReportImageDto> vulnerabilityReportImageDtos =
            await vulnerabilityReportService.GetVulnerabilityReportImageDtos(namespaceName, excludedSeverityIds);

        return Ok(vulnerabilityReportImageDtos);
        // http://localhost:5032/api/vulnerability-reports/grouped-by-image?namespaceName=test&excludedSeverities
    }
}
